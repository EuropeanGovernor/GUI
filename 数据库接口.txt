1.##查询菜品是否存在，存在则返回营养信息
	def get_nutrition(name_list):
	return nutrition
	
	##输入的是菜名列表，查询菜品是否存在支持一个一个查询。例如['馒头']不支持['馒头*2']；
	##nutrition是字符串，334.0:25.0:45.1:12.3:25.4:22.0:33.0:45.0:1.0:1.0:1.0
	###蛋白质，脂肪，碳水化合物，a,b,c，钙，铁，锌，膳食纤维，热量 11个浮点数用冒号分开
	##若菜名不存在，则nutrition为 ''

2.##清空记录，并添加菜品到当日菜谱
	def add2_todaymenu(name_list):

	###输入的是菜名字符串列表。比如['馒头','叉烧肉','西红柿炒鸡蛋']

3.###查询用户最新的身高体重
	def get_latest_pd():
	return pd_list
	###pd_list是浮点数列表  [173.0,55.0]

4.###获取当日已选菜品
	def get_selected():
	return name_list
	######输出的是菜名字符串列表。比如['馒头*2','叉烧肉*4','西红柿炒鸡蛋*5']

5.###获取当日菜谱列表
	def get_todaymenu():
	return name_list
	
	######输出的是菜名字符串列表。比如['馒头','叉烧肉','西红柿炒鸡蛋']

6.##将菜品添加到today_select
	def add2_todayselect(name,p):
	
	###  输入的name是一个菜名字符串,p是浮点份数
	
7.##周食谱评估
	def week_assess():
	return x,advice
	
	###  x是一个有11个浮点数的列表，例如	x=[0.71,0.88,0.98,0.78,0.45,0.66,0.77,0.88,0.99,0.85]
	#     比如x[0]=0.71,表示这周（总摄入蛋白质）比（推荐摄入）=71%
	##   advice是字符串，表示给出的建议
	
8.#####根据日期得到历史菜品，输入例如'2021-05-20'
	def get_history_when(date):
	return meals
	
	###meals为字符串列表，例如['馒头*1','米饭*2','香蕉*3']
	
9.###获取用户身体状态
	def get_status():#####返回字符串，例如 a='头痛'
	return a
	
	
	
	
	
	
	
	
	
	
	
	
	
	
